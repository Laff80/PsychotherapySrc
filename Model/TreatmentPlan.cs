//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Insourcia.Psychotherapy.Model
{
    public partial class TreatmentPlan
    {
        #region Primitive Properties
    
        public virtual int TreatmentPlanID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PatientID
        {
            get { return _patientID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_patientID != value)
                    {
                        if (Patient != null && Patient.PatientID != value)
                        {
                            Patient = null;
                        }
                        _patientID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _patientID;
    
        public virtual string ObjectiveAnswer
        {
            get;
            set;
        }
    
        public virtual string Comment
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreateTime
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> LastModifiedTime
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsValid
        {
            get;
            set;
        }
    
        public virtual string Status
        {
            get;
            set;
        }
    
        public virtual Nullable<int> UserId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ClusterID
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<ClinicalService> ClinicalServices
        {
            get
            {
                if (_clinicalServices == null)
                {
                    var newCollection = new FixupCollection<ClinicalService>();
                    newCollection.CollectionChanged += FixupClinicalServices;
                    _clinicalServices = newCollection;
                }
                return _clinicalServices;
            }
            set
            {
                if (!ReferenceEquals(_clinicalServices, value))
                {
                    var previousValue = _clinicalServices as FixupCollection<ClinicalService>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupClinicalServices;
                    }
                    _clinicalServices = value;
                    var newValue = value as FixupCollection<ClinicalService>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupClinicalServices;
                    }
                }
            }
        }
        private ICollection<ClinicalService> _clinicalServices;
    
        public virtual ICollection<ClinicalServiceDiagnosi> ClinicalServiceDiagnosis
        {
            get
            {
                if (_clinicalServiceDiagnosis == null)
                {
                    var newCollection = new FixupCollection<ClinicalServiceDiagnosi>();
                    newCollection.CollectionChanged += FixupClinicalServiceDiagnosis;
                    _clinicalServiceDiagnosis = newCollection;
                }
                return _clinicalServiceDiagnosis;
            }
            set
            {
                if (!ReferenceEquals(_clinicalServiceDiagnosis, value))
                {
                    var previousValue = _clinicalServiceDiagnosis as FixupCollection<ClinicalServiceDiagnosi>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupClinicalServiceDiagnosis;
                    }
                    _clinicalServiceDiagnosis = value;
                    var newValue = value as FixupCollection<ClinicalServiceDiagnosi>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupClinicalServiceDiagnosis;
                    }
                }
            }
        }
        private ICollection<ClinicalServiceDiagnosi> _clinicalServiceDiagnosis;
    
        public virtual Patient Patient
        {
            get { return _patient; }
            set
            {
                if (!ReferenceEquals(_patient, value))
                {
                    var previousValue = _patient;
                    _patient = value;
                    FixupPatient(previousValue);
                }
            }
        }
        private Patient _patient;
    
        public virtual ICollection<TreatmentPlanItem> TreatmentPlanItems
        {
            get
            {
                if (_treatmentPlanItems == null)
                {
                    var newCollection = new FixupCollection<TreatmentPlanItem>();
                    newCollection.CollectionChanged += FixupTreatmentPlanItems;
                    _treatmentPlanItems = newCollection;
                }
                return _treatmentPlanItems;
            }
            set
            {
                if (!ReferenceEquals(_treatmentPlanItems, value))
                {
                    var previousValue = _treatmentPlanItems as FixupCollection<TreatmentPlanItem>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTreatmentPlanItems;
                    }
                    _treatmentPlanItems = value;
                    var newValue = value as FixupCollection<TreatmentPlanItem>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTreatmentPlanItems;
                    }
                }
            }
        }
        private ICollection<TreatmentPlanItem> _treatmentPlanItems;
    
        public virtual ICollection<UserTreatmentPlanPermission> UserTreatmentPlanPermissions
        {
            get
            {
                if (_userTreatmentPlanPermissions == null)
                {
                    var newCollection = new FixupCollection<UserTreatmentPlanPermission>();
                    newCollection.CollectionChanged += FixupUserTreatmentPlanPermissions;
                    _userTreatmentPlanPermissions = newCollection;
                }
                return _userTreatmentPlanPermissions;
            }
            set
            {
                if (!ReferenceEquals(_userTreatmentPlanPermissions, value))
                {
                    var previousValue = _userTreatmentPlanPermissions as FixupCollection<UserTreatmentPlanPermission>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserTreatmentPlanPermissions;
                    }
                    _userTreatmentPlanPermissions = value;
                    var newValue = value as FixupCollection<UserTreatmentPlanPermission>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserTreatmentPlanPermissions;
                    }
                }
            }
        }
        private ICollection<UserTreatmentPlanPermission> _userTreatmentPlanPermissions;
    
        public virtual ICollection<ClinicalServiceNoteRate> ClinicalServiceNoteRates
        {
            get
            {
                if (_clinicalServiceNoteRates == null)
                {
                    var newCollection = new FixupCollection<ClinicalServiceNoteRate>();
                    newCollection.CollectionChanged += FixupClinicalServiceNoteRates;
                    _clinicalServiceNoteRates = newCollection;
                }
                return _clinicalServiceNoteRates;
            }
            set
            {
                if (!ReferenceEquals(_clinicalServiceNoteRates, value))
                {
                    var previousValue = _clinicalServiceNoteRates as FixupCollection<ClinicalServiceNoteRate>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupClinicalServiceNoteRates;
                    }
                    _clinicalServiceNoteRates = value;
                    var newValue = value as FixupCollection<ClinicalServiceNoteRate>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupClinicalServiceNoteRates;
                    }
                }
            }
        }
        private ICollection<ClinicalServiceNoteRate> _clinicalServiceNoteRates;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupPatient(Patient previousValue)
        {
            if (previousValue != null && previousValue.TreatmentPlans.Contains(this))
            {
                previousValue.TreatmentPlans.Remove(this);
            }
    
            if (Patient != null)
            {
                if (!Patient.TreatmentPlans.Contains(this))
                {
                    Patient.TreatmentPlans.Add(this);
                }
                if (PatientID != Patient.PatientID)
                {
                    PatientID = Patient.PatientID;
                }
            }
            else if (!_settingFK)
            {
                PatientID = null;
            }
        }
    
        private void FixupClinicalServices(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ClinicalService item in e.NewItems)
                {
                    item.TreatmentPlan = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ClinicalService item in e.OldItems)
                {
                    if (ReferenceEquals(item.TreatmentPlan, this))
                    {
                        item.TreatmentPlan = null;
                    }
                }
            }
        }
    
        private void FixupClinicalServiceDiagnosis(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ClinicalServiceDiagnosi item in e.NewItems)
                {
                    item.TreatmentPlan = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ClinicalServiceDiagnosi item in e.OldItems)
                {
                    if (ReferenceEquals(item.TreatmentPlan, this))
                    {
                        item.TreatmentPlan = null;
                    }
                }
            }
        }
    
        private void FixupTreatmentPlanItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TreatmentPlanItem item in e.NewItems)
                {
                    item.TreatmentPlan = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TreatmentPlanItem item in e.OldItems)
                {
                    if (ReferenceEquals(item.TreatmentPlan, this))
                    {
                        item.TreatmentPlan = null;
                    }
                }
            }
        }
    
        private void FixupUserTreatmentPlanPermissions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserTreatmentPlanPermission item in e.NewItems)
                {
                    item.TreatmentPlan = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserTreatmentPlanPermission item in e.OldItems)
                {
                    if (ReferenceEquals(item.TreatmentPlan, this))
                    {
                        item.TreatmentPlan = null;
                    }
                }
            }
        }
    
        private void FixupClinicalServiceNoteRates(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ClinicalServiceNoteRate item in e.NewItems)
                {
                    item.TreatmentPlan = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ClinicalServiceNoteRate item in e.OldItems)
                {
                    if (ReferenceEquals(item.TreatmentPlan, this))
                    {
                        item.TreatmentPlan = null;
                    }
                }
            }
        }

        #endregion
    }
}
