//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Insourcia.Psychotherapy.Model
{
    public partial class Group
    {
        #region Primitive Properties
    
        public virtual int GroupID
        {
            get;
            set;
        }
    
        public virtual string GroupName
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsValid
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<SystemFunction> SystemFunctions
        {
            get
            {
                if (_systemFunctions == null)
                {
                    var newCollection = new FixupCollection<SystemFunction>();
                    newCollection.CollectionChanged += FixupSystemFunctions;
                    _systemFunctions = newCollection;
                }
                return _systemFunctions;
            }
            set
            {
                if (!ReferenceEquals(_systemFunctions, value))
                {
                    var previousValue = _systemFunctions as FixupCollection<SystemFunction>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSystemFunctions;
                    }
                    _systemFunctions = value;
                    var newValue = value as FixupCollection<SystemFunction>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSystemFunctions;
                    }
                }
            }
        }
        private ICollection<SystemFunction> _systemFunctions;
    
        public virtual ICollection<User> Users
        {
            get
            {
                if (_users == null)
                {
                    var newCollection = new FixupCollection<User>();
                    newCollection.CollectionChanged += FixupUsers;
                    _users = newCollection;
                }
                return _users;
            }
            set
            {
                if (!ReferenceEquals(_users, value))
                {
                    var previousValue = _users as FixupCollection<User>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUsers;
                    }
                    _users = value;
                    var newValue = value as FixupCollection<User>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUsers;
                    }
                }
            }
        }
        private ICollection<User> _users;

        #endregion
        #region Association Fixup
    
        private void FixupSystemFunctions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SystemFunction item in e.NewItems)
                {
                    if (!item.Groups.Contains(this))
                    {
                        item.Groups.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SystemFunction item in e.OldItems)
                {
                    if (item.Groups.Contains(this))
                    {
                        item.Groups.Remove(this);
                    }
                }
            }
        }
    
        private void FixupUsers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (User item in e.NewItems)
                {
                    if (!item.Groups.Contains(this))
                    {
                        item.Groups.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (User item in e.OldItems)
                {
                    if (item.Groups.Contains(this))
                    {
                        item.Groups.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
